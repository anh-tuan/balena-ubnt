##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

proxy_cache_path /var/cache/nginx/cache levels=1:2 keys_zone=mmcache:10m
            loader_threshold=300 loader_files=200 max_size=50m;

# Redirect all HTTP to HTTPS
server {
	listen 80 default_server;
	listen [::]:80 default_server;
	server_name _;
	return 301 https://$host$request_uri;
}

# HTTPS unifi.{{DOMAIN}}
server {
    listen      443 ssl http2;
    listen      [::]:443 ssl http2;
    root        /srv/www;

    ssl_certificate      /app/data/ssl/nginx.crt;
    ssl_certificate_key  /app/data/ssl/nginx.key;
    ssl_dhparam          /app/data/ssl/dhparam.pem;

    server_name unifi.{{DOMAIN}};

    #charset koi8-r;
    #access_log  /var/log/nginx/log/host.access.log main;
    error_log stderr;
    proxy_cache mmcache;

    location / {
        proxy_pass       https://unifi:8443/;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        # Mitigate httpoxy attack
        proxy_set_header Proxy "";

        ## Required for websockets
        proxy_http_version 1.1;
        proxy_set_header Connection "upgrade";
        proxy_set_header Upgrade $http_upgrade;
        proxy_read_timeout 600s;

        ## Optional: Do not log, get it at the destination
        access_log off;
    }

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    ## Handle the GFC (Great Firewal of China) breaking DNS for BT to random IPs
    location /announc {
        access_log off;
        error_log off;
        default_type text/plain;
        return 410 "d14:failure reason13:not a tracker8:retry in5:nevere";
    }

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}

# HTTPS unms.{{DOMAIN}}
server {
    listen      443 ssl http2;
    listen      [::]:443 ssl http2;
    root        /srv/www;

    ssl_certificate      /app/data/ssl/nginx.crt;
    ssl_certificate_key  /app/data/ssl/nginx.key;
    ssl_dhparam          /app/data/ssl/dhparam.pem;

    server_name unms.{{DOMAIN}};

    #charset koi8-r;
    #access_log  /var/log/nginx/log/host.access.log main;
    error_log stderr;
    proxy_cache mmcache;

    location / {
        proxy_pass       https://unms:443/;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        # Mitigate httpoxy attack
        proxy_set_header Proxy "";

        ## Required for websockets
        proxy_http_version 1.1;
        proxy_set_header Connection "upgrade";
        proxy_set_header Upgrade $http_upgrade;
        proxy_read_timeout 600s;

        ## Optional: Do not log, get it at the destination
        access_log off;
    }

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    ## Handle the GFC (Great Firewal of China) breaking DNS for BT to random IPs
    location /announc {
        access_log off;
        error_log off;
        default_type text/plain;
        return 410 "d14:failure reason13:not a tracker8:retry in5:nevere";
    }

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
